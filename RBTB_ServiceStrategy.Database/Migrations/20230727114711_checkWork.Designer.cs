// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RBTB_ServiceStrategy.Database.Context;

#nullable disable

namespace RBTB_ServiceStrategy.Database.Migrations
{
    [DbContext(typeof(RBTB_ServiceStrategyContext))]
    [Migration("20230727114711_checkWork")]
    partial class checkWork
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RBTB_ServiceStrategy.Application.Entities.SettingsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdStrategy")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdStrategy");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("RBTB_ServiceStrategy.Application.Entities.StrategyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CurrencyPair")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("StockMarket")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Strategies");
                });

            modelBuilder.Entity("RBTB_ServiceStrategy.Application.Entities.SettingsEntity", b =>
                {
                    b.HasOne("RBTB_ServiceStrategy.Application.Entities.StrategyEntity", "StrategyEntity")
                        .WithMany("SettingsEntities")
                        .HasForeignKey("IdStrategy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StrategyEntity");
                });

            modelBuilder.Entity("RBTB_ServiceStrategy.Application.Entities.StrategyEntity", b =>
                {
                    b.Navigation("SettingsEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
